/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@fb-name: 'fb';
@fb-x: 37px;
@fb-y: 36px;
@fb-offset-x: -37px;
@fb-offset-y: -36px;
@fb-width: 26px;
@fb-height: 26px;
@fb-total-width: 127px;
@fb-total-height: 80px;
@fb-image: '../img/sprite.png';
@fb: 37px 36px -37px -36px 26px 26px 127px 80px '../img/sprite.png' 'fb';
@home-name: 'home';
@home-x: 37px;
@home-y: 0px;
@home-offset-x: -37px;
@home-offset-y: 0px;
@home-width: 36px;
@home-height: 36px;
@home-total-width: 127px;
@home-total-height: 80px;
@home-image: '../img/sprite.png';
@home: 37px 0px -37px 0px 36px 36px 127px 80px '../img/sprite.png' 'home';
@insta-name: 'insta';
@insta-x: 73px;
@insta-y: 0px;
@insta-offset-x: -73px;
@insta-offset-y: 0px;
@insta-width: 26px;
@insta-height: 26px;
@insta-total-width: 127px;
@insta-total-height: 80px;
@insta-image: '../img/sprite.png';
@insta: 73px 0px -73px 0px 26px 26px 127px 80px '../img/sprite.png' 'insta';
@mail-name: 'mail';
@mail-x: 99px;
@mail-y: 0px;
@mail-offset-x: -99px;
@mail-offset-y: 0px;
@mail-width: 28px;
@mail-height: 20px;
@mail-total-width: 127px;
@mail-total-height: 80px;
@mail-image: '../img/sprite.png';
@mail: 99px 0px -99px 0px 28px 20px 127px 80px '../img/sprite.png' 'mail';
@mic-name: 'mic';
@mic-x: 0px;
@mic-y: 37px;
@mic-offset-x: 0px;
@mic-offset-y: -37px;
@mic-width: 31px;
@mic-height: 43px;
@mic-total-width: 127px;
@mic-total-height: 80px;
@mic-image: '../img/sprite.png';
@mic: 0px 37px 0px -37px 31px 43px 127px 80px '../img/sprite.png' 'mic';
@mic2-name: 'mic2';
@mic2-x: 0px;
@mic2-y: 0px;
@mic2-offset-x: 0px;
@mic2-offset-y: 0px;
@mic2-width: 37px;
@mic2-height: 37px;
@mic2-total-width: 127px;
@mic2-total-height: 80px;
@mic2-image: '../img/sprite.png';
@mic2: 0px 0px 0px 0px 37px 37px 127px 80px '../img/sprite.png' 'mic2';
@mobile-name: 'mobile';
@mobile-x: 73px;
@mobile-y: 26px;
@mobile-offset-x: -73px;
@mobile-offset-y: -26px;
@mobile-width: 20px;
@mobile-height: 32px;
@mobile-total-width: 127px;
@mobile-total-height: 80px;
@mobile-image: '../img/sprite.png';
@mobile: 73px 26px -73px -26px 20px 32px 127px 80px '../img/sprite.png' 'mobile';
@quote-up-name: 'quote-up';
@quote-up-x: 99px;
@quote-up-y: 20px;
@quote-up-offset-x: -99px;
@quote-up-offset-y: -20px;
@quote-up-width: 19px;
@quote-up-height: 17px;
@quote-up-total-width: 127px;
@quote-up-total-height: 80px;
@quote-up-image: '../img/sprite.png';
@quote-up: 99px 20px -99px -20px 19px 17px 127px 80px '../img/sprite.png' 'quote-up';
@vk-name: 'vk';
@vk-x: 37px;
@vk-y: 62px;
@vk-offset-x: -37px;
@vk-offset-y: -62px;
@vk-width: 29px;
@vk-height: 17px;
@vk-total-width: 127px;
@vk-total-height: 80px;
@vk-image: '../img/sprite.png';
@vk: 37px 62px -37px -62px 29px 17px 127px 80px '../img/sprite.png' 'vk';
@spritesheet-width: 127px;
@spritesheet-height: 80px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @fb @home @insta @mail @mic @mic2 @mobile @quote-up @vk;
@spritesheet: 127px 80px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
